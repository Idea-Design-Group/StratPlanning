@model Application.DTOs.PlanStepDTO
@using Core.Constants

@{
    ViewData["Title"] = "Worksheet";
}

<partial name="~/Views/Worksheet/Partials/_SideMenu.cshtml" />

<div class="m-portlet m-portlet--full-height m-portlet--tabs m-width--100">
    <div class="m-portlet__head">

        <div class="m-portlet__head-caption">
            <div class="m-portlet__head-title">

                <span class="d-lg-none m-portlet__head-icon m-brand">
                    <span class="m-stack__item m-stack__item--middle m-brand__tools">
                        <!-- BEGIN: Responsive Aside Left Menu Toggler -->
                        <a href="javascript:;" id="m_aside_left_offcanvas_toggle"
                           class="m-brand__icon m-brand__toggler m-brand__toggler--left m--visible-tablet-and-mobile-inline-block">
                            <span></span>
                        </a>
                        <!-- END -->
                    </span>
                </span>
                <div class="m-subheader">
                    <div class="d-flex align-items-center">
                        <div class="mr-auto">
                            <h2>@steps.ResourceManager.GetString(Model.Step)</h2>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="m-portlet__body">

        <div class="m-accordion m-accordion--default" id="m_accordion_1" role="tablist">
            <!--begin::Item-->
            <div class="m-accordion__item">
                <div class="m-accordion__item-head" role="tab" id="m_accordion_1_item_1_head"
                     data-toggle="collapse" href="#m_accordion_1_item_1_body" aria-expanded="false">
                    <span class="m-accordion__item-icon">
                        <i class="fa fa-film"></i>
                    </span>
                    <span class="m-accordion__item-title">
                        Introduction
                    </span>
                    <span class="m-accordion__item-mode"></span>
                </div>
                <div class="m-accordion__item-body collapse show" id="m_accordion_1_item_1_body"
                     role="tabpanel" aria-labelledby="m_accordion_1_item_1_head" data-parent="#m_accordion_1"
                     style="">
                    <div class="m-accordion__item-content">
                        <video width="100%" controls>
                            Your browser does not support the video tag.
                        </video>
                    </div>
                </div>
            </div>
            <!--end::Item-->
        </div>
        <div id="planning_team_portlet">
            @if (Model.Step == Steps.Predeparture)
            {
                <partial name="~/Views/Worksheet/Partials/_PlanningTeam.cshtml" model="Model.PlanningTeam" />
            }
        </div>
        <form class="m-form m-form--fit m-form--label-align-left">

            @foreach (var stepBlock in Model.StepBlocks)
            {
                <partial name="~/Views/Worksheet/Partials/_StepBlock.cshtml" model="stepBlock" />
            }

            @if (Model.Step == Steps.Predeparture)
            {
                <partial name="~/Views/Worksheet/Partials/_StepTasks.cshtml" />
            }

            <div class="form-group m-form__group m--img-centered">
                <button type="button" class="btn m-btn--pill    btn-sp m--margin-right-10">
                    Save
                </button>
                <button type="button" class="btn m-btn--pill    btn-sp user-submit-btn">
                    Submit
                </button>
            </div>
        </form>
    </div>
</div>


@section scripts{
    <script>
        $('#menu_worksheet').addClass('m-menu__item--active');
    </script>

    @if (Model.Step == Steps.Predeparture)
    {
        <script>

            $(document).on('submit', "form#add_user_to_plan_new", function (e) {
                e.preventDefault();

                let formData = new FormData(document.querySelector('form#add_user_to_plan_new'));

                let formObject = {};
                formData.forEach(function (value, key) {
                    formObject[key] = value;
                });

                formObject['PlanId'] =@Model.PlanId;

                $.ajax(
                    {
                        url: '@Url.Action("AddNewUserToPlan","User")',
                        method: "post",
                        data: formObject,
                        success: function (data, statusText, xhr) {
                            if (xhr.status == 201) {
                                notify("Successfully added", "success", 5);
                                updatePlanningTeam();

                            }
                            if (xhr.status == 400) {
                                notify("An Error occured during sending a request", "danger", 5);
                            }

                            $('form#add_user_to_plan_new').html(data);

                            $('form#add_user_to_plan_new').find('.m-select2').select2();

                            $.validator.unobtrusive.parse('form#add_user_to_plan_new');
                        },
                        error: function (xhr, statusText, error) {
                            notify("An Error occured during sending a request", "danger", 5);
                        }
                    })
            });

            $(document).on('submit', "form#add_user_to_plan_existing", function (e) {
                e.preventDefault();

                let formData = new FormData(document.querySelector('form#add_user_to_plan_existing'));

                let formObject = {};
                formData.forEach(function (value, key) {
                    formObject[key] = value;
                });

                formObject['PlanId'] =@Model.PlanId;

                $.ajax(
                    {
                        url: '@Url.Action("AddExistingUserToPlan","User")',
                        method: "post",
                        data: formObject,
                        success: function (data, statusText, xhr) {
                            if (xhr.status == 201) {

                                notify("Successfully added", "success", 5);
                                updatePlanningTeam();
                            }

                            if (xhr.status == 400) {
                                notify("An Error occured during sending a request", "danger", 5);
                            }

                            $('form#add_user_to_plan_existing').html(data);

                            $('form#add_user_to_plan_existing').find('.m-select2').select2();

                            $.validator.unobtrusive.parse('form#add_user_to_plan_existing');
                        },
                        error: function (xhr, statusText, error) {
                            notify("An Error occured during sending a request", "danger", 5);
                        }
                    })
            });


            $(document).on('click', '.remove-user-from-plan', function (e) {
                e.preventDefault();

                let userId = $(this).data('id');

                deleteConfirm().then(result => {
                    if (result) {
                         $.ajax(
                       {
                           url: '@Url.Action("RemoveUserFromPlan", "User")',
                           method: "post",
                           data: {
                                userId: userId,
                                planId: @Model.PlanId
                           },
                        success: function (data, statusText, xhr) {
                            if (xhr.status == 400) {
                                notify("An Error occured during sending a request", "danger", 5);
                            }

                            if (data.result) {
                                notify("Successfully deleted", "success", 5);
                                updatePlanningTeam();
                            }
                            else {
                                notify("Removing the user failed", "danger", 5);
                            }

                        },
                        error: function (xhr, statusText, error) {
                            notify("An Error occured during sending a request", "danger", 5);
                        }
                    })
                    }
                })

            });

            function updatePlanningTeam() {

                $('#planning_team_add_modal').modal('hide');

                   $.ajax(
                       {
                           url: '@Url.Action("GetPlanningTeam","Worksheet")',
                           method: "post",
                           data: {
                           planId: @Model.PlanId
                           },
                        success: function (data, statusText, xhr) {
                            if (xhr.status == 400) {
                                notify("Planning team update failed", "danger", 5);
                            }

                            $('#planning_team_portlet').html(data);

                            $('#planning_team_portlet').find('.m-select2').select2();

                            $.validator.unobtrusive.parse('#planning_team_portlet form');

                        },
                        error: function (xhr, statusText, error) {
                            notify("An Error occured during updating the planning plan's view", "danger", 5);
                        }
                    })
            }

        </script>
    }
}
