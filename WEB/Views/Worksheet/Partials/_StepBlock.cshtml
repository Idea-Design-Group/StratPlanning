@model Application.DTOs.PlanStepDTO
@using Core.Constants;

@{
    int blockIndex = (int)ViewData["BlockIndex"];
}
<div class="m-portlet m-portlet--bordered m-portlet--unair m--margin-top-30">
    <div class="m-portlet__head">
        <div class="m-portlet__head-caption">
            <div class="row no-gutters justify-content-md-center">
                <div class="col col-lg-12">
                    <h3 class="m-portlet__head-text">
                        @Model.StepBlocks[blockIndex].Title
                    </h3>
                </div>
            </div>
        </div>
        <a href="#" data-target="#help_modal_@blockIndex" data-toggle="modal"
           class="m-portlet__nav-link btn btn-lg btn-secondary  m-btn m-btn--icon m-btn--icon-only m-btn--pill  m-dropdown__toggle m-intro__help">
            <i class="fa fa-question"></i>
        </a>
    </div>
    <div class="m-portlet__body">

        @if (Model.StepBlocks[blockIndex].Description != null)
        {
            <div class="row">
                <div class="col-sm-12">
                    <div class="alert m-alert m-alert--default" role="alert">
                        <div class="m-scrollable" data-scrollable="true" data-max-height="200"
                             data-mobile-max-height="200">
                            @Model.StepBlocks[blockIndex].Description
                        </div>
                    </div>
                </div>
            </div>
        }

        @{
            var questions = Model.StepBlocks[blockIndex].Questions;
        }

        @for (int i = 0; i < questions.Count; i++)
        {

            if (questions[i].Type == QuestionTypes.Boolean)
            {
                <partial name="~/Views/Worksheet/Partials/Questions/_BooleanQuestion.cshtml"
                         model="Model"
                         view-data='new ViewDataDictionary(ViewData) {  {"QuestionIndex", i } }' />
            }

            if (questions[i].Type == QuestionTypes.Select)
            {
                <partial name="~/Views/Worksheet/Partials/Questions/_SelectQuestion.cshtml"
                         model="Model"
                         view-data='new ViewDataDictionary(ViewData) {  {"QuestionIndex", i } }' />
            }

            if (questions[i].Type == QuestionTypes.MultiSelect)
            {
                <partial name="~/Views/Worksheet/Partials/Questions/_MultiSelectQuestion.cshtml"
                         model="Model"
                         view - data='new ViewDataDictionary(ViewData) {  {"QuestionIndex", i } }' />
            }

            if (questions[i].Type == QuestionTypes.TagMultiSelect)
            {
                <partial name="~/Views/Worksheet/Partials/Questions/_TagMultiSelectQuestion.cshtml"
                         model="Model"
                         view-data='new ViewDataDictionary(ViewData) {  {"QuestionIndex", i } }' />
            }

            if (questions[i].Type == QuestionTypes.PlanTypeSelect)
            {
                <partial name="~/Views/Worksheet/Partials/Questions/_PlanTypeSelectQuestion.cshtml"
                         model="Model"
                         view-data='new ViewDataDictionary(ViewData) {  {"QuestionIndex", i } }' />
            }

            if (questions[i].Type == QuestionTypes.TextArea)
            {
                <partial name="~/Views/Worksheet/Partials/Questions/_TextAreaQuestion.cshtml"
                         model="Model"
                         view-data='new ViewDataDictionary(ViewData) {  {"QuestionIndex", i } }' />
            }

            if (questions[i].Type == QuestionTypes.File)
            {
                <partial name="~/Views/Worksheet/Partials/Questions/_FileQuestion.cshtml"
                         model="Model"
                         view-data='new ViewDataDictionary(ViewData) {  {"QuestionIndex", i } }' />
            }

            if (questions[i].Type == QuestionTypes.Values)
            {
                <partial name="~/Views/Worksheet/Partials/Questions/_ValuesQuestion.cshtml"
                         model="Model"
                         view-data='new ViewDataDictionary(ViewData) {  {"QuestionIndex", i } }' />
            }

            if (questions[i].Type == QuestionTypes.Stakeholder)
            {
                <partial name="~/Views/Worksheet/Partials/Questions/_StakeholdersQuestion.cshtml"
                         model="Model"
                         view-data='new ViewDataDictionary(ViewData) {  {"QuestionIndex", i } }' />
            }

            if (questions[i].Type == QuestionTypes.SWOT)
            {
                <partial name="~/Views/Worksheet/Partials/Questions/_SWOTQuestion.cshtml"
                         model="Model"
                         view-data='new ViewDataDictionary(ViewData) {  {"QuestionIndex", i } }' />
            }

            if (questions[i].Type == QuestionTypes.InternalStakeholdersRating)
            {
                <partial name="~/Views/Worksheet/Partials/Questions/_InternalStakeholdersRatingQuestion.cshtml"
                         model="Model"
                         view-data='new ViewDataDictionary(ViewData) {  {"QuestionIndex", i } }' />
            }

            if (questions[i].Type == QuestionTypes.ExternalStakeholdersRating)
            {
                <partial name="~/Views/Worksheet/Partials/Questions/_ExternalStakeholdersRatingQuestion.cshtml"
                         model="Model"
                         view-data='new ViewDataDictionary(ViewData) {  {"QuestionIndex", i } }' />
            }

            if (questions[i].Type == QuestionTypes.StrategicIssues)
            {
                <partial name="~/Views/Worksheet/Partials/Questions/_StrategicIssuesQuestion.cshtml"
                         model="Model"
                         view-data='new ViewDataDictionary(ViewData) {  {"QuestionIndex", i } }' />
            }
        }
    </div>
</div>


<div class="modal fade" id="help_modal_@blockIndex" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">
                    Help
                </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">
                        &times;
                    </span>
                </button>
            </div>
            <div class="modal-body">
                @Model.StepBlocks[blockIndex].Instruction
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">
                    Close
                </button>
            </div>
        </div>
    </div>
</div>
