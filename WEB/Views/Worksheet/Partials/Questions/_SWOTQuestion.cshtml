@model Application.DTOs.PlanStepDTO

@{
    var blockIndex = (int)ViewData["BlockIndex"];
    var questionIndex = (int)ViewData["QuestionIndex"];

    var questionIndexOffset = (int)ViewData["QuestionIndexOffset"];

    var question = Model.StepBlocks[blockIndex].Questions[questionIndex];

    var answerGroup = Model.AnswerGroups.Where(x => x.QuestionId == question.Id).FirstOrDefault();

    var filledAnswer = Model.AnswerGroups[questionIndexOffset + questionIndex];

    var swotAnswers = answerGroup.OtherAnswers.SelectMany(x => x.SwotAnswer.Strengths.Select(y => new
    {
        author = x.Author,
        value = y,
        isDefinitive = false,
        type = SWOTTypes.Strength
    }))
    .Concat(answerGroup.OtherAnswers.SelectMany(x => x.SwotAnswer.Weaknesses.Select(y => new
    {
        author = x.Author,
        value = y,
        isDefinitive = false,
        type = SWOTTypes.Weakness
    })))
    .Concat(answerGroup.OtherAnswers.SelectMany(x => x.SwotAnswer.Opportunities.Select(y => new
    {
        author = x.Author,
        value = y,
        isDefinitive = false,
        type = SWOTTypes.Opportunity
    })))
    .Concat(answerGroup.OtherAnswers.SelectMany(x => x.SwotAnswer.Threats.Select(y => new
    {
        author = x.Author,
        value = y,
        isDefinitive = false,
        type = SWOTTypes.Threat
    }))).ToList();

    if (answerGroup.DefinitiveAnswer != null)
    {
        swotAnswers.AddRange(answerGroup.DefinitiveAnswer.SwotAnswer.Strengths.Select(x => new
        {
            author = sharedResource.worksheetQuestionsDefinitiveAnswer,
            value = x,
            isDefinitive = true,
            type = SWOTTypes.Strength
        })
        .Concat(answerGroup.DefinitiveAnswer.SwotAnswer.Weaknesses.Select(x => new
        {
            author = sharedResource.worksheetQuestionsDefinitiveAnswer,
            value = x,
            isDefinitive = true,
            type = SWOTTypes.Weakness
        }))
        .Concat(answerGroup.DefinitiveAnswer.SwotAnswer.Opportunities.Select(x => new
        {
            author = sharedResource.worksheetQuestionsDefinitiveAnswer,
            value = x,
            isDefinitive = true,
            type = SWOTTypes.Opportunity
        }))
        .Concat(answerGroup.DefinitiveAnswer.SwotAnswer.Threats.Select(x => new
        {
            author = sharedResource.worksheetQuestionsDefinitiveAnswer,
            value = x,
            isDefinitive = true,
            type = SWOTTypes.Threat
        })));
    }

    swotAnswers = swotAnswers.OrderByDescending(x => x.isDefinitive).ToList();
}

<div class="row">
    <div class="col-12">
        @if (answerGroup.DefinitiveAnswer != null || (answerGroup.OtherAnswers != null && answerGroup.OtherAnswers.Count() > 0))
        {
            <div class="m-demo">
                <div class="m-demo__preview">
                    <div class="form-group m-form__group">
                        <label>
                            @sharedResource.worksheetQuestionsCombinedResult
                        </label>
                        <div class="swot col-sm-12 m--margin-bottom-20">
                            <div class="row">
                                <div class="d-none d-md-block col-md-2 swot-cell">

                                </div>
                                <div class="d-none d-md-block col-md-5  swot-cell bg-color-lightgreen">
                                    <h5>@sharedResource.worksheetQuestionsSWOTHelpful</h5>
                                    <span>@sharedResource.worksheetQuestionsSWOTHelpfulDescription</span>
                                </div>
                                <div class="d-none d-md-block col-md-5 swot-cell bg-color-lightred">
                                    <h5>@sharedResource.worksheetQuestionsSWOTHarmful</h5>
                                    <span>@sharedResource.worksheetQuestionsSWOTHarmfulDescription</span>
                                </div>
                            </div>
                            <div class="row">
                                <div class="d-none d-md-block col-md-2 swot-cell bg-color-lightyellow">
                                    <h5>@sharedResource.worksheetQuestionsSWOTInternalOrigin</h5>
                                    <span>@sharedResource.worksheetQuestionsSWOTInternalOriginDescription</span>
                                </div>
                                <div class="col-sm-12 col-md-5 swot-cell bg-color-greenyellow">
                                    <div class="row swot-add ">
                                        <div class="col-12">
                                            <h5 class="pull-left"> @sharedResource.worksheetQuestionsSWOTStrengths</h5>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-12 ">
                                            <div class="m-list-badge m-list-badge--light-bg">
                                                <div class="m-list-badge__items">
                                                    @foreach (var answer in swotAnswers.Where(x => x.type == SWOTTypes.Strength).GroupBy(x => x.value))
                                                    {
                                                        if (Model.IsAdmin && !Model.IsCompleted)
                                                        {
                                                            <button type="button" title=""
                                                                    data-toggle="tooltip"
                                                                    class="m-list-badge__item sp-tooltip @(answer.Any(x => x.isDefinitive) ? "m-list-badge__item--warning" : "m-list-badge__item--default")"
                                                                    data-original-title="@String.Join(',', answer.Select(x => x.author))"
                                                                    data-val='@(Json.Serialize(new { swotName = answer.Key }))'
                                                                    onclick='selectAnswer(this, "#l_@(question.Id)_strengths")'>
                                                                @(answer.Key)
                                                            </button>
                                                        }
                                                        else
                                                        {
                                                            <span title=""
                                                                  data-toggle="tooltip"
                                                                  class="m-list-badge__item sp-tooltip @(answer.Any(x => x.isDefinitive) ? "m-list-badge__item--warning" : "m-list-badge__item--default")"
                                                                  data-original-title="@String.Join(',', answer.Select(x => x.author))">
                                                                @(answer.Key)
                                                            </span>
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-sm-12 col-md-5  swot-cell  bg-color-redyellow">
                                    <div class="row swot-add">
                                        <div class="col-12">
                                            <h5 class="pull-left">@sharedResource.worksheetQuestionsSWOTWeaknesses</h5>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-12 ">
                                            <div class="m-list-badge m-list-badge--light-bg">
                                                <div class="m-list-badge__items">
                                                    @foreach (var answer in swotAnswers.Where(x => x.type == SWOTTypes.Weakness).GroupBy(x => x.value))
                                                    {
                                                        if (Model.IsAdmin && !Model.IsCompleted)
                                                        {
                                                            <span title=""
                                                                  data-toggle="tooltip"
                                                                  class="m-list-badge__item sp-tooltip @(answer.Any(x => x.isDefinitive) ? "m-list-badge__item--warning" : "m-list-badge__item--default")"
                                                                  data-original-title="@String.Join(',', answer.Select(x => x.author))"
                                                                  data-val='@(Json.Serialize(new { swotName = answer.Key }))'
                                                                  onclick='selectAnswer(this, "#l_@(question.Id)_weaknesses")'>
                                                                @(answer.Key)
                                                            </span>
                                                        }
                                                        else
                                                        {
                                                            <span title=""
                                                                  data-toggle="tooltip"
                                                                  class="m-list-badge__item sp-tooltip @(answer.Any(x => x.isDefinitive) ? "m-list-badge__item--warning" : "m-list-badge__item--default")"
                                                                  data-original-title="@String.Join(',', answer.Select(x => x.author))">
                                                                @(answer.Key)
                                                            </span>
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="d-none d-md-block col-md-2 swot-cell  bg-color-lightblue">
                                    <h5>@sharedResource.worksheetQuestionsSWOTExternalOrigin</h5>
                                    <span>@sharedResource.worksheetQuestionsSWOTExternalOriginDescription</span>
                                </div>
                                <div class="col-sm-12 col-md-5  swot-cell  bg-color-greenblue">
                                    <div class="row swot-add">
                                        <div class="col-12">
                                            <h5 class="pull-left"> @sharedResource.worksheetQuestionsSWOTOpportunities</h5>
                                        </div>
                                    </div>
                                    <div class="row">

                                        <div class="col-sm-12 ">
                                            <div class="m-list-badge m-list-badge--light-bg">
                                                <div class="m-list-badge__items">
                                                    @foreach (var answer in swotAnswers.Where(x => x.type == SWOTTypes.Opportunity).GroupBy(x => x.value))
                                                    {
                                                        if (Model.IsAdmin && !Model.IsCompleted)
                                                        {
                                                            <span title=""
                                                                  data-toggle="tooltip"
                                                                  class="m-list-badge__item sp-tooltip @(answer.Any(x => x.isDefinitive) ? "m-list-badge__item--warning" : "m-list-badge__item--default")"
                                                                  data-original-title="@String.Join(',', answer.Select(x => x.author))"
                                                                  data-val='@(Json.Serialize(new { swotName = answer.Key }))'
                                                                  onclick='selectAnswer(this, "#l_@(question.Id)_opportunities")'>
                                                                @(answer.Key)
                                                            </span>
                                                        }
                                                        else
                                                        {
                                                            <span title=""
                                                                  data-toggle="tooltip"
                                                                  class="m-list-badge__item sp-tooltip @(answer.Any(x => x.isDefinitive) ? "m-list-badge__item--warning" : "m-list-badge__item--default")"
                                                                  data-original-title="@String.Join(',', answer.Select(x => x.author))">
                                                                @(answer.Key)
                                                            </span>
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 col-md-5  swot-cell  bg-color-redblue">
                                    <div class="row swot-add">
                                        <div class="col-12">
                                            <h5 class="pull-left"> @sharedResource.worksheetQuestionsSWOTThreats</h5>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-12 ">
                                            <div class="m-list-badge m-list-badge--light-bg">
                                                <div class="m-list-badge__items">
                                                    @foreach (var answer in swotAnswers.Where(x => x.type == SWOTTypes.Threat).GroupBy(x => x.value))
                                                    {
                                                        if (Model.IsAdmin && !Model.IsCompleted)
                                                        {
                                                            <span title=""
                                                                  data-toggle="tooltip"
                                                                  class="m-list-badge__item sp-tooltip @(answer.Any(x => x.isDefinitive) ? "m-list-badge__item--warning" : "m-list-badge__item--default")"
                                                                  data-original-title="@String.Join(',', answer.Select(x => x.author))"
                                                                  data-val='@(Json.Serialize(new { swotName = answer.Key }))'
                                                                  onclick='selectAnswer(this, "#l_@(question.Id)_threats")'>
                                                                @(answer.Key)
                                                            </span>
                                                        }
                                                        else
                                                        {
                                                            <span title=""
                                                                  data-toggle="tooltip"
                                                                  class="m-list-badge__item sp-tooltip @(answer.Any(x => x.isDefinitive) ? "m-list-badge__item--warning" : "m-list-badge__item--default")"
                                                                  data-original-title="@String.Join(',', answer.Select(x => x.author))">
                                                                @(answer.Key)
                                                            </span>
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        }

        <div class="form-group m-form__group">
            <label>
                @sharedResource.worksheetQuestionsYourAnswer
            </label>
            <div>
                <input type="hidden" asp-for="AnswerGroups[questionIndexOffset+questionIndex].QuestionId" value="@answerGroup.QuestionId" />
                <div class="swot col-sm-12 m--margin-bottom-20">

                    <div class="row">
                        <div class="d-none d-md-block col-md-2 swot-cell">

                        </div>
                        <div class="d-none d-md-block col-md-5  swot-cell bg-color-lightgreen">
                            <h5>@sharedResource.worksheetQuestionsSWOTHelpful</h5>
                            <span>@sharedResource.worksheetQuestionsSWOTHelpfulDescription</span>
                        </div>
                        <div class="d-none d-md-block col-md-5 swot-cell bg-color-lightred">
                            <h5>@sharedResource.worksheetQuestionsSWOTHarmful</h5>
                            <span>@sharedResource.worksheetQuestionsSWOTHarmfulDescription</span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="d-none d-md-block col-md-2 swot-cell bg-color-lightyellow">
                            <h5>@sharedResource.worksheetQuestionsSWOTInternalOrigin</h5>
                            <span>@sharedResource.worksheetQuestionsSWOTInternalOriginDescription</span>
                        </div>
                        <div class="col-sm-12 col-md-5 swot-cell bg-color-greenyellow">
                            <div class="row swot-add ">
                                <div class="col-12">
                                    <h5 class="pull-left"> @sharedResource.worksheetQuestionsSWOTStrengths</h5>
                                </div>
                            </div>
                            <div class="row list-items-add-group">

                                @if ((Model.IsAdmin || !Model.IsSubmitted) && !Model.IsCompleted)
                                {
                                    <div class="col-sm-12 swot-inputs">
                                        <div class="input-group m--margin-bottom-10">
                                            <input type="text"
                                                   class="form-control m-input m-input--air form-control-danger list-add-input">
                                            <div class="input-group-append">
                                                <button class="btn btn-sp m-btn m-btn--icon list-add-button" data-input-name="AnswerGroups[@(questionIndexOffset + questionIndex)].Answer.SwotAnswer.Strengths">
                                                    @sharedResource.worksheetQuestionsSWOTAddButton
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                }
                                <div class="col-sm-12 ">
                                    <div class="m-list-badge m-list-badge--light-bg">
                                        <div id="l_@(question.Id)_strengths" class="m-list-badge__items list-items">
                                            @if (answerGroup.Answer?.SwotAnswer.Strengths != null)
                                            {
                                                foreach (var strength in answerGroup.Answer.SwotAnswer.Strengths)
                                                {
                                                    <a class="m-list-badge__item m-list-badge__item--default list-item">
                                                        <input type="hidden" asp-for="AnswerGroups[questionIndexOffset + questionIndex].Answer.SwotAnswer.Strengths" value="@strength" />
                                                        @strength
                                                        @if ((Model.IsAdmin || !Model.IsSubmitted) && !Model.IsCompleted)
                                                        {
                                                            <span class="list-item-delete fa fa-close"></span>
                                                        }
                                                    </a>
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-5  swot-cell  bg-color-redyellow">
                            <div class="row swot-add">
                                <div class="col-12">
                                    <h5 class="pull-left"> @sharedResource.worksheetQuestionsSWOTWeaknesses</h5>
                                </div>
                            </div>
                            <div class="row list-items-add-group">
                                @if ((Model.IsAdmin || !Model.IsSubmitted) && !Model.IsCompleted)
                                {
                                    <div class="col-sm-12 swot-inputs">
                                        <div class="input-group m--margin-bottom-10">
                                            <input type="text"
                                                   class="form-control m-input m-input--air form-control-danger list-add-input">
                                            <div class="input-group-append">
                                                <button class="btn btn-sp m-btn m-btn--icon list-add-button" data-input-name="AnswerGroups[@(questionIndexOffset + questionIndex)].Answer.SwotAnswer.Weaknesses">
                                                    @sharedResource.worksheetQuestionsSWOTAddButton
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                }
                                <div class="col-sm-12 ">
                                    <div class="m-list-badge m-list-badge--light-bg">
                                        <div id="l_@(question.Id)_weaknesses" class="m-list-badge__items list-items">
                                            @if (answerGroup.Answer?.SwotAnswer.Weaknesses != null)
                                            {
                                                foreach (var weakness in answerGroup.Answer.SwotAnswer.Weaknesses)
                                                {
                                                    <a class="m-list-badge__item m-list-badge__item--default list-item">
                                                        <input type="hidden" asp-for="AnswerGroups[questionIndexOffset + questionIndex].Answer.SwotAnswer.Weaknesses" value="@weakness" />
                                                        @weakness
                                                        @if ((Model.IsAdmin || !Model.IsSubmitted) && !Model.IsCompleted)
                                                        {
                                                            <span class="list-item-delete fa fa-close"></span>
                                                        }
                                                    </a>
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="d-none d-md-block col-md-2 swot-cell  bg-color-lightblue">
                            <h5>@sharedResource.worksheetQuestionsSWOTExternalOrigin</h5>
                            <span>@sharedResource.worksheetQuestionsSWOTExternalOriginDescription</span>
                        </div>
                        <div class="col-sm-12 col-md-5  swot-cell  bg-color-greenblue">
                            <div class="row swot-add">
                                <div class="col-12">
                                    <h5 class="pull-left"> @sharedResource.worksheetQuestionsSWOTOpportunities</h5>
                                </div>
                            </div>
                            <div class="row list-items-add-group">
                                @if ((Model.IsAdmin || !Model.IsSubmitted) && !Model.IsCompleted)
                                {
                                    <div class="col-sm-12 swot-inputs">
                                        <div class="input-group m--margin-bottom-10">
                                            <input type="text"
                                                   class="form-control m-input m-input--air form-control-danger list-add-input">
                                            <div class="input-group-append">
                                                <button class="btn btn-sp m-btn m-btn--icon list-add-button" data-input-name="AnswerGroups[@(questionIndexOffset + questionIndex)].Answer.SwotAnswer.Opportunities">
                                                    @sharedResource.worksheetQuestionsSWOTAddButton
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                }
                                <div class="col-sm-12 ">
                                    <div class="m-list-badge m-list-badge--light-bg">
                                        <div id="l_@(question.Id)_opportunities" class="m-list-badge__items list-items">
                                            @if (answerGroup.Answer?.SwotAnswer.Opportunities != null)
                                            {
                                                foreach (var opportunity in answerGroup.Answer.SwotAnswer.Opportunities)
                                                {
                                                    <a class="m-list-badge__item m-list-badge__item--default list-item">
                                                        <input type="hidden" asp-for="AnswerGroups[questionIndexOffset + questionIndex].Answer.SwotAnswer.Opportunities" value="@opportunity" />
                                                        @opportunity

                                                        @if ((Model.IsAdmin || !Model.IsSubmitted) && !Model.IsCompleted)
                                                        {
                                                            <span class="list-item-delete fa fa-close"></span>
                                                        }
                                                    </a>
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-5  swot-cell  bg-color-redblue">
                            <div class="row swot-add">
                                <div class="col-12">
                                    <h5 class="pull-left">@sharedResource.worksheetQuestionsSWOTThreats</h5>
                                </div>
                            </div>
                            <div class="row list-items-add-group">
                                @if ((Model.IsAdmin || !Model.IsSubmitted) && !Model.IsCompleted)
                                {
                                    <div class="col-sm-12 swot-inputs">
                                        <div class="input-group m--margin-bottom-10">
                                            <input type="text"
                                                   class="form-control m-input m-input--air form-control-danger list-add-input">
                                            <div class="input-group-append">
                                                <button class="btn btn-sp m-btn m-btn--icon list-add-button" data-input-name="AnswerGroups[@(questionIndexOffset + questionIndex)].Answer.SwotAnswer.Threats">
                                                    @sharedResource.worksheetQuestionsSWOTAddButton
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                }
                                <div class="col-sm-12 ">
                                    <div class="m-list-badge m-list-badge--light-bg">
                                        <div id="l_@(question.Id)_threats" class="m-list-badge__items list-items">
                                            @if (answerGroup.Answer?.SwotAnswer.Threats != null)
                                            {
                                                foreach (var threat in answerGroup.Answer.SwotAnswer.Threats)
                                                {
                                                    <a class="m-list-badge__item m-list-badge__item--default list-item">
                                                        <input type="hidden" asp-for="AnswerGroups[questionIndexOffset + questionIndex].Answer.SwotAnswer.Threats" value="@threat" />
                                                        @threat
                                                        @if ((Model.IsAdmin || !Model.IsSubmitted) && !Model.IsCompleted)
                                                        {
                                                            <span class="list-item-delete fa fa-close"></span>
                                                        }
                                                    </a>
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@if ((Model.IsAdmin || !Model.IsSubmitted) && !Model.IsCompleted)
{
    <script>
        if (typeof fieldOptions === 'undefined') {
            var fieldOptions = {};
        }

        fieldOptions['#l_@(question.Id)_threats'] = {
            template: function (data, index) {
                if ($('#l_@(question.Id)_threats').find(`input[value="${data.swotName}"]`).length > 0) return null;

                return `
                    <a class="m-list-badge__item m-list-badge__item--default list-item">
                        <input type="hidden" name="AnswerGroups[@(questionIndexOffset + questionIndex)].Answer.SwotAnswer.Threats" value="${data.swotName}"/>
                        ${data.swotName}
                        <span class="list-item-delete fa fa-close"></span>
                    </a>
                `;
            }
        };

        fieldOptions['#l_@(question.Id)_opportunities'] = {
            template: function (data, index) {
                if ($('#l_@(question.Id)_opportunities').find(`input[value="${data.swotName}"]`).length > 0) return null;

                return `
                    <a class="m-list-badge__item m-list-badge__item--default list-item">
                        <input type="hidden" name="AnswerGroups[@(questionIndexOffset + questionIndex)].Answer.SwotAnswer.Opportunities" value="${data.swotName}"/>
                        ${data.swotName}
                        <span class="list-item-delete fa fa-close"></span>
                    </a>
                `;
            }
        };

        fieldOptions['#l_@(question.Id)_weaknesses'] = {
            template: function (data, index) {
                if ($('#l_@(question.Id)_weaknesses').find(`input[value="${data.swotName}"]`).length > 0) return null;

                return `
                    <a class="m-list-badge__item m-list-badge__item--default list-item">
                        <input type="hidden" name="AnswerGroups[@(questionIndexOffset + questionIndex)].Answer.SwotAnswer.Weaknesses" value="${data.swotName}"/>
                        ${data.swotName}
                        <span class="list-item-delete fa fa-close"></span>
                    </a>
                `;
            }
        };

        fieldOptions['#l_@(question.Id)_strengths'] = {
            template: function (data, index) {
                if ($('#l_@(question.Id)_strengths').find(`input[value="${data.swotName}"]`).length > 0) return null;

                return `
                    <a class="m-list-badge__item m-list-badge__item--default list-item">
                        <input type="hidden" name="AnswerGroups[@(questionIndexOffset + questionIndex)].Answer.SwotAnswer.Strengths" value="${data.swotName}"/>
                        ${data.swotName}
                        <span class="list-item-delete fa fa-close"></span>
                    </a>
                `;
            }
        };
    </script>
}