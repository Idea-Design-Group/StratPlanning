@model Application.DTOs.PlanStepDTO
@inject Application.Interfaces.Repositories.IPlanRepository planRepository
@using Core.Constants;
@using Web.Helpers;

@{
    var sortedSteps = planRepository.GetStepList().ToArray();
}
<button class="m-aside-left-close m-aside-left-close--skin-light" id="m_aside_left_close_btn">
    <i class="la la-close"></i>
</button>
<div id="m_aside_left" class="m-grid__item m-aside-left">
    <!-- BEGIN: Aside Menu -->
    <div id="m_ver_menu" class="m-aside-menu  m-aside-menu--skin-light m-aside-menu--submenu-skin-light "
         data-menu-vertical="true" data-menu-scrollable="false" data-menu-dropdown-timeout="500">
        <ul class="m-menu__nav  m-menu__nav--dropdown-submenu-arrow ">
            <li>
                <ul class="m-subheader__breadcrumbs m-nav m-nav--inline">
                    <li class="m-nav__item">
                        <a asp-action="GetPlanList" class="m-nav__link">
                            <i class="m-nav__link-icon la la-list"></i>
                            <span class="m-nav__link-text">
                                Plan list
                            </span>
                        </a>
                    </li>
                </ul>
            </li>
            <li class="m-menu__section m--padding-left-5">
                <h4 class="m-menu__section-text ">
                    Worksheets
                </h4>
                <i class="m-menu__section-icon flaticon-more-v3"></i>
            </li>
            @foreach (var stepTask in Model.StepTasks)
            {
                var statusClass = "";

                switch (stepTask.Status)
                {
                    case StepTaskStatus.Complete: statusClass = "fa-check m--font-success"; break;
                    case StepTaskStatus.Incomplete: statusClass = ""; break;
                    case StepTaskStatus.OverdueComplete: statusClass = "fa-warning m--font-warning"; break;
                    case StepTaskStatus.OverdueIncomplete: statusClass = "fa-remove m--font-danger"; break;
                }

                <li class="m-menu__item @(Model.Step == stepTask.Step ? "m-menu__item--active" : "")" aria-haspopup="true" data-redirect="true">
                    @if (stepTask.IsAvailable)
                    {

                        <a asp-controller="WorkSheet" asp-action="GetStep" asp-route-stepIndex="@stepTask.Step" asp-route-planId="@Model.PlanId" class="m-menu__link m--padding-left-5">
                            <i class="m-menu__link-bullet fa @statusClass">
                                <span></span>
                            </i>
                            <span class="m-menu__link-text m--padding-left-10">
                                @steps.ResourceManager.GetString(stepTask.Step)
                            </span>
                        </a>
                    }
                    else
                    {
                        <span class="m-menu__link m--padding-left-5 disabled">
                            <i class="m-menu__link-bullet fa @statusClass">
                                <span></span>
                            </i>
                            <span class="m-menu__link-text m--padding-left-10">
                                @steps.ResourceManager.GetString(stepTask.Step)
                            </span>
                        </span>
                    }
                </li>
            }

        </ul>
    </div>
    <!-- END: Aside Menu -->
</div>