@model Application.DTOs.PlanStepDTO
@using Resources

@using Web.Helpers

@{
    var stepList = StepHelper.GetStepList(Context);

    var count = 0;
    var stepTaskCount = 0;
}

<div class="m-portlet m-portlet--bordered m-portlet--unair m--margin-top-30">
    <div class="m-portlet__head">
        <div class="m-portlet__head-caption">
            <div class="row no-gutters justify-content-md-center">
                <div class="col col-lg-12">
                    <h3 class="m-portlet__head-text">
                        Steps
                    </h3>
                </div>
            </div>
        </div>
    </div>
    <div class="m-portlet__body">

        <div class="form-group m-form__group">
            <div class="row">
                <label class="col-form-label col-sm-12">
                    What steps will you use in your planning process?
                </label>
            </div>
            <div class="m-scrollable " data-scrollable="true" data-axis="xy">
                <table class="table m-table  table-bordered m--margin-top-10" width="100%">
                    <thead>
                        <tr>
                            <th>
                                Steps / tasks
                            </th>
                            <th>
                                Responsible persons
                            </th>
                            @if (Model.IsAdmin)
                            {
                                <th>
                                    Schedule
                                </th>
                                <th>
                                    Remind before (days)
                                </th>
                                <th>
                                    Completed
                                </th>
                                <th>
                                    Status
                                </th>
                            }
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var stepTask in Model.StepTasks)
                        {
                            var stepTaskAnswers = Model.StepTaskAnswers?.Answer?.StepTaskAnswers.Where(x => x.Step == stepTask.Step) ?? Enumerable.Empty<StepTaskAnswerDTO>();

                            <tr>
                                <td>
                                    @steps.ResourceManager.GetString(stepTask.Step)
                                </td>
                                <td>
                                    <div class="m-list-badge m-list-badge--light-bg">
                                        <div class="m-list-badge__items">
                                            @{
                                                IEnumerable<StepTaskAnswerDTO> definitiveAnswers = Enumerable.Empty<StepTaskAnswerDTO>();
                                                IEnumerable<StepTaskAnswerDTO> otherStepTaskAnswers = Enumerable.Empty<StepTaskAnswerDTO>();
                                                if (!Model.IsAdmin)
                                                {
                                                    definitiveAnswers = Model.StepTaskAnswers?.DefinitiveAnswer?.StepTaskAnswers.Where(x => x.Step == stepTask.Step) ?? Enumerable.Empty<StepTaskAnswerDTO>();

                                                    foreach (var definitiveAnswer in definitiveAnswers)
                                                    {
                                                        <span class="m-list-badge__item m-list-badge__item--warning">
                                                            @definitiveAnswer.FirstName @definitiveAnswer.LastName (@definitiveAnswer.Email)
                                                        </span>
                                                    }
                                                }

                                                var otherAnswers = Model.StepTaskAnswers?.OtherAnswers ?? Enumerable.Empty<AnswerDTO>();

                                                foreach (var otherAnswer in otherAnswers)
                                                {
                                                    otherStepTaskAnswers = otherAnswer.StepTaskAnswers.Where(x => x.Step == stepTask.Step) ?? Enumerable.Empty<StepTaskAnswerDTO>();

                                                    foreach (var stepTaskAnswer in otherStepTaskAnswers)
                                                    {
                                                        <span title="@otherAnswer.Author"
                                                              data-toggle="tooltip"
                                                              class="m-list-badge__item m-list-badge__item--default sp-tooltip">
                                                            @stepTaskAnswer.FirstName @stepTaskAnswer.LastName (@stepTaskAnswer.Email)
                                                        </span>
                                                    }
                                                }

                                                if (definitiveAnswers.Count() == 0 && otherStepTaskAnswers.Count() == 0)
                                                {
                                                    <span>no other answers</span>
                                                }
                                            }
                                        </div>
                                    </div>
                                    <hr />
                                    <div class="m-list-badge m-list-badge--light-bg">
                                        <div class="m-list-badge__items list-items" id="step_tasks_list_@stepTask.Step">
                                            @{
                                                var userToPlans = UserHelper.GetUsersSelectListByPlan(Context, Model.PlanId);
                                            }
                                            @foreach (var stepTaskAnswer in stepTaskAnswers)
                                            {
                                                <a class="m-list-badge__item m-list-badge__item--default list-item">
                                                    <input type="hidden" asp-for="StepTaskAnswers.Answer.StepTaskAnswers[count].Id" value="@stepTaskAnswer.Id" />
                                                    <input type="hidden" asp-for="StepTaskAnswers.Answer.StepTaskAnswers[count].FirstName" value="@stepTaskAnswer.FirstName" />
                                                    <input type="hidden" asp-for="StepTaskAnswers.Answer.StepTaskAnswers[count].LastName" value="@stepTaskAnswer.LastName" />
                                                    <input type="hidden" asp-for="StepTaskAnswers.Answer.StepTaskAnswers[count].Step" value="@stepTaskAnswer.Step" />
                                                    <input type="hidden" asp-for="StepTaskAnswers.Answer.StepTaskAnswers[count].UserToPlanId" value="@stepTaskAnswer.UserToPlanId" />
                                                    <input type="hidden" name="StepTaskAnswers.Answer.StepTaskAnswers.Index" value="@count" />
                                                    @if (stepTaskAnswer.UserToPlanId != null)
                                                    {
                                                        var userToPlan = userToPlans.Where(x => x.Value == stepTaskAnswer.UserToPlanId.Value.ToString()).SingleOrDefault();
                                                        @userToPlan?.Text
                                                    }
                                                    else
                                                    {
                                                        @stepTaskAnswer.FirstName @stepTaskAnswer.LastName @(stepTaskAnswer.UserToPlanId == null ? $"({stepTaskAnswer.Email})" : "")
                                                    }
                                                    <span class="list-item-delete fa fa-close"></span>
                                                </a>
                                                count++;
                                            }
                                        </div>
                                    </div>
                                    @if (Model.IsAdmin || !Model.IsSubmitted)
                                    {
                                        <a href="" class="btn btn-sp m-btn m-btn--pill m--pull-right"
                                           data-toggle="modal" data-target="#edit_steptasks_modal" data-step="@stepTask.Step">
                                            <i class="fa fa-plus"></i>
                                        </a>
                                    }
                                </td>
                                @if (Model.IsAdmin)
                                {
                                    <td>
                                        <input asp-for="StepTasks[stepTaskCount].Id" type="hidden" />
                                        <input type="text" asp-for="StepTasks[stepTaskCount].Schedule" class="datepicker form-control" value="@Model.StepTasks[stepTaskCount].Schedule?.ToString("dd-MM-yyyy")" />
                                    </td>
                                    <td>
                                        <input type="number" asp-for="StepTasks[stepTaskCount].RemindIn" class="form-control" />
                                    </td>
                                    <td>
                                        <span class="m-switch m-switch--icon">
                                            <label>
                                                <input asp-for="StepTasks[stepTaskCount].IsCompleted" disabled="@Model.StepTasks[stepTaskCount].IsCompleted" class="step-complete-checkbox"
                                                       type="checkbox" data-id="@Model.StepTasks[stepTaskCount].Id">
                                                <span></span>
                                            </label>
                                        </span>
                                    </td>
                                    <td>
                                        @{
                                            var statusClass = "";

                                            switch (stepTask.Status)
                                            {
                                                case StepTaskStatus.Completed: statusClass = "fa-check m--font-success"; break;
                                                case StepTaskStatus.Uncompleted: statusClass = ""; break;
                                                case StepTaskStatus.OverdueCompleted: statusClass = "fa-warning m--font-warning"; break;
                                                case StepTaskStatus.OverdueUnCompleted: statusClass = "fa-remove m--font-danger"; break;
                                            }
                                        }
                                        <span class="fa @statusClass">
                                        </span>
                                    </td>
                                }

                            </tr>
                            stepTaskCount++;
                        }
                    </tbody>
                </table>
                <input type="hidden" name="count" id="step_tasks_count" value="@count" />
            </div>
            <span class="m-form__help">
                Review these steps with the people who are involved, and refine them as
                needed.
            </span>
        </div>
    </div>
</div>